import { registerRootComponent } from 'expo';
import { Text } from 'react-native';
import { SafeAreaProvider } from 'react-native-safe-area-context';
import { NavigationContainer } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';

import { KabelwerkProvider } from 'kabelwerk-react-native';

import { ConfigContext, ConfigProvider } from './ConfigContext.jsx';
import { HomeScreen } from './HomeScreen.jsx';
import { ConfigScreen } from './ConfigScreen.jsx';

// we do not really need react navigation for the demo, but we use it in order
// to test our KabelwerkRoomScreen component
const Stack = createNativeStackNavigator();

const App = function () {
  return (
    <ConfigProvider>
      <SafeAreaProvider>
        <NavigationContainer>
          <ConfigContext.Consumer>
            {(config) => {
              if (config.isLoading) {
                return <Text>Loading...</Text>;
              }

              if (config.url && config.token) {
                return (
                  <KabelwerkProvider url={config.url} token={config.token}>
                    <Stack.Navigator>
                      <Stack.Screen
                        name="home"
                        component={HomeScreen}
                        options={{ title: 'Home' }}
                      />
                    </Stack.Navigator>
                  </KabelwerkProvider>
                );
              }

              return (
                <Stack.Navigator>
                  <Stack.Screen
                    name="config"
                    component={ConfigScreen}
                    options={{ title: 'Configuration' }}
                  />
                </Stack.Navigator>
              );
            }}
          </ConfigContext.Consumer>
        </NavigationContainer>
      </SafeAreaProvider>
    </ConfigProvider>
  );
};

// needed unless package.json's main is set to the default value generated by
// expo â€” node_modules/expo/AppEntry.js
registerRootComponent(App);

// exporting the root component makes expo refresh faster
export default App;
